@using Slack.Common.Enums
@model Slack.Models.ViewModels.RegisterModel
@{
    Layout = null;
}
<html>
<head>
    <link rel="stylesheet" href="~/Content/Styles/Layout/fonts.css">
    <link rel="stylesheet" href="~/Content/bootstrap.min.css" />
    <link rel="stylesheet" href="~/Content/Styles/Account/Login/login.css" />
    <link rel="stylesheet" href="~/Content/Styles/Account/Register/register.css" />
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/Account/Register/register.js"></script>
</head>
<body>
    <div></div>
    <div class="container">
        <form action="/register" method="post" autocomplete="off">
            @Html.AntiForgeryToken()

            <div class="form-horizontal  col-10 col-sm-12 col-md-12">
                <h4 class="text-center text-uppercase text-gold">slack / register</h4>
                <hr class="bg-gold" />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="step1">
                    <div class="form-group">
                        <div class="mx-auto col-md-9 col-sm-9">
                            @Html.LabelFor(model => model.Email,
                                             htmlAttributes: new { @class = "control-label text-uppercase text-light" })
                            @Html.EditorFor(model => model.Email, new
                            {
                                htmlAttributes = new
                                {
                                    @class = "form-control focus-border-gold text-dark",
                                    placeholder = "Enter email"
                                }
                            })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="mx-auto col-md-9 col-sm-9">
                            @Html.LabelFor(model => model.Password,
                                                                                                                                        htmlAttributes: new { @class = "control-label text-uppercase text-light" })
                            @Html.EditorFor(model => model.Password, new
                            {
                                htmlAttributes = new
                                {
                                    @class = "form-control focus-border-gold text-dark",
                                    placeholder = "Enter password"
                                }
                            })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="mx-auto col-md-9 col-sm-9">
                            @Html.LabelFor(model => model.FirstName,
                                                                htmlAttributes: new { @class = "control-label text-uppercase text-light" })
                            @Html.EditorFor(model => model.FirstName, new
                            {
                                htmlAttributes = new
                                {
                                    @class = "form-control focus-border-gold text-dark",
                                    placeholder = "Enter your firstname"
                                }
                            })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="mx-auto col-md-9 col-sm-9">
                            @Html.LabelFor(model => model.LastName,
                                          htmlAttributes: new { @class = "control-label text-uppercase text-light" })
                            @Html.EditorFor(model => model.LastName, new
                            {
                                htmlAttributes = new
                                {
                                    @class = "form-control focus-border-gold text-dark",
                                    placeholder = "Enter your lastname"
                                }
                            })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="mx-auto text-center col-md-9 col-sm-9 mt-4">
                            <div class="btn btn-outline-light d-block mx-auto" id="goNext">Register</div>
                            <a href="/login" class="text-uppercase d-inline-block mx-auto mt-2 small text-light">or login</a>
                        </div>
                    </div>
                </div>
                <div class="step2">
                    <div class="form-group">
                        <div class="mx-auto col-md-9 col-sm-9">
                            @Html.LabelFor(model => model.Country,
                                                          htmlAttributes: new { @class = "control-label text-uppercase text-light" })
                            @Html.EditorFor(model => model.Country, new
                            {
                                htmlAttributes = new
                                {
                                    @class = "form-control focus-border-gold text-dark",
                                    placeholder = "Enter your country"
                                }
                            })
                            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="mx-auto col-md-9 col-sm-9">
                            @Html.LabelFor(model => model.City,
                                                  htmlAttributes: new { @class = "control-label text-uppercase text-light" })
                            @Html.EditorFor(model => model.City, new
                            {
                                htmlAttributes = new
                                {
                                    @class = "form-control focus-border-gold text-dark",
                                    placeholder = "Enter your city"
                                }
                            })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="mx-auto col-md-9 col-sm-9">
                            @Html.LabelFor(model => model.Gender,
                                           htmlAttributes: new { @class = "control-label text-uppercase text-light" })
                            @Html.DropDownListFor(model => model.Gender, new List<SelectListItem> {
                                                             new SelectListItem() {Text = "Male",Value = Gender.Male.ToString(),Selected = true},
                                                               new SelectListItem() {Text = "Female",Value = Gender.Female.ToString()}},
                                                                 new { @class = "form-control focus-border-gold text-dark" })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @{
                        DateTime min = new DateTime(DateTime.Now.Year - 100, 10, 10);
                        DateTime max = new DateTime(DateTime.Now.Year - 10, 12, 31);
                    }
                    <div class="form-group">
                        <div class="mx-auto col-md-9 col-sm-9">
                            @Html.LabelFor(model => model.Birthday,
                                                              htmlAttributes: new { @class = "control-label text-uppercase text-light" })
                            <input type="date" value="@max.ToString("yyyy-MM-dd")" class="form-control focus-border-gold"
                                   min=@min.ToString("yyyy-MM-dd") max=@max.ToString("yyyy-MM-dd")>
                            @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="mx-auto text-center col-md-9 col-sm-9 mt-4">
                            <input type="submit" value="Complete registration" class="btn btn-outline-light d-block mx-auto" />
                            <a class="text-uppercase d-inline-block mx-auto mt-2 small text-light" id="goBack">go back</a>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</body>
</html>
