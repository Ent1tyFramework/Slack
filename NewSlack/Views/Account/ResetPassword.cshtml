@model Slack.Models.ViewModels.ResetPasswordModel
@{
    Layout = null;
}
<html>
<head>
    <link rel="stylesheet" href="~/Content/Styles/Layout/fonts.css">
    <link rel="stylesheet" href="~/Content/bootstrap.min.css" />
    <link rel="stylesheet" href="~/Content/Styles/Account/Login/login.css" />
    <link rel="stylesheet" href="~/Content/Styles/Account/ResetPassword/resetpassword.css" />
    <script src="~/Scripts/bootstrap.min.js"></script>
</head>
<body class="bg-light">
    <div class="container">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal col-10 col-sm-12 col-md-12">
                <h4 class="text-center text-uppercase">slack / create new password</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="mx-auto col-md-9 col-sm-9">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label text-uppercase" })
                        @Html.EditorFor(model => model.Password, new
                        {
                            htmlAttributes = new
                            {
                                @class = "form-control text-dark focus-border-purple",
                                placeholder = "Enter new password"
                            }
                        })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="mx-auto col-md-9 col-sm-9">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label text-uppercase" })
                        @Html.EditorFor(model => model.ConfirmPassword, new
                        {
                            htmlAttributes = new
                            {
                                @class = "form-control text-dark focus-border-purple",
                                placeholder = "Confirm password"
                            }
                        })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="mx-auto text-center col-md-9 col-sm-9 mt-4">
                        <input type="submit" value="Create" class="btn d-block mx-auto" />
                    </div>
                </div>
            </div>
        }
    </div>
</body>
</html>
